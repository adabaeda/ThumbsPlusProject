ifelse(uf_TripDescription == "aquatic macronivertebrates ", "aquatic macroinvertebrates",
ifelse(uf_TripDescription == "photo of sampling reach at transect 1", "aquatic macroinvertebrates",
ifelse(uf_TripDescription == "aquatic macroinvertebrates, water quality monitoring", "aquatic macroinvertebrates/water quality",
ifelse(uf_TripDescription == "aquatic macroinverterbrate/water quality", "aquatic macroinvertebrates/water quality",
ifelse(uf_TripDescription == "aquatic macroinvertebrates/waterquality", "aquatic macroinvertebrates/water quality",
ifelse(uf_TripDescription == "aquatic macroionvertebrates/water quality", "aquatic macroinvertebrates/water quality",
ifelse(uf_TripDescription == "aquatic macroinvertebrate ", "aquatic macroinvertebrates",
ifelse(uf_TripDescription == "water quality/aquatic macroinvertebrates", "aquatic macroinvertebrates/water quality",
ifelse(uf_TripDescription == "water quality bacteria trip", "water quality/bacteria",
ifelse(uf_TripDescription == "water quality, bacteria trip", "water quality/bacteria",
ifelse(uf_TripDescription == "water quality bacteria sampling", "water quality/bacteria",
ifelse(uf_TripDescription == "water quality monitoring ", "water quality",
ifelse(uf_TripDescription == "august 28", "hydrology",
ifelse(uf_TripDescription == "intensive bateria sampling", "intensive bacteria monitoring",
ifelse(uf_TripDescription == "bacteria monitoring trip", "bateria sampling",
ifelse(uf_TripDescription == "intefrated riparian / groundwater", "integrated riparian / groundwater",
ifelse(uf_TripDescription == "hydro", "hydrology",
ifelse(uf_TripDescription == "integrated riparian ", "integrated riparian",
ifelse(uf_TripDescription == "springs recon ", "springs recon",
ifelse(uf_TripDescription == ("download transducer data and talk with bill zeedyk during his annual repeat photo trip"), "photopoint monitoring",
uf_TripDescription))))))))))))))))))))))))))))))))))))) %>%
select(uf_TripDescription, uf_TripDescriptionFIX)
View(descFixes)
descFixes %>%
select(uf_TripDescriptionFIX) %>% distinct() %>% view()
filteredData %>%
select(idThumb, idThumbUDF, Date, uf_TripDescription, filePath) %>%
left_join(tripDescriptions)
filteredData %>%
select(idThumb, idThumbUDF, Date, uf_TripDescription, filePath) %>%
left_join(tripDescriptions) %>% view()
filteredData %>%
select(idThumb, idThumbUDF, Date, uf_TripDescription, filePath, ) %>%
left_join(descFixes) %>% view()
tripDescriptions <- filteredData %>%
select(uf_TripDescription) %>%
remove_empty("rows") %>%
mutate(uf_TripDescription = tolower(uf_TripDescription)) #%>%
View(descFixes)
filteredData %>%
select(idThumb, idThumbUDF, Date, uf_TripDescription, filePath, ) %>%
right_join(descFixes) %>% view()
filteredData %>%
select(idThumb, idThumbUDF, Date, uf_TripDescription, filePath, ) %>%
left_join(descFixes, by = uf_TripDescription) %>% view()
filteredData %>%
select(idThumb, idThumbUDF, Date, uf_TripDescription, filePath, ) %>%
left_join(descFixes, by = "uf_TripDescription") %>% view()
View(descFixes)
View(descFixes)
filteredData %>%
select(idThumb, idThumbUDF, Date, uf_TripDescription, filePath) %>%
tolower(uf_TripDescription) %>%
left_join(descFixes, by = "uf_TripDescription") %>% view()
filteredData %>%
select(idThumb, idThumbUDF, Date, uf_TripDescription, filePath) %>%
tolower(uf_TripDescription) %>%
left_join(descFixes) %>% view()
filteredData %>%
select(idThumb, idThumbUDF, Date, uf_TripDescription, filePath) %>%
mutate(uf_TripDescription = tolower(uf_TripDescription)) %>%
left_join(descFixes) %>% view()
filteredPathandUDF %>%
select(uf_PhotoYear, uf_PhotoDate, Date) %>%
filter(is.na(uf_PhotoDate)) %>% distinct() %>% view()
load(here("filteredPathandUDF"))
filteredPathandUDF <- load(here("filteredPathandUDF"))
filteredPathandUDF <- filteredData
filteredPathandUDF %>%
select(uf_PhotoYear, uf_PhotoDate, Date) %>%
filter(is.na(uf_PhotoDate)) %>% distinct() %>% view()
filteredPathandUDF %>%
select(uf_PhotoYear, uf_PhotoDate, Date) %>%
filter(is.na(uf_PhotoDate)) %>%
arrange(Date) %>% distinct() %>% view()
## Looking at Dates
filteredPathandUDF %>%
select(uf_PhotoYear, Date) %>%
filter(is.na(uf_PhotoYear)) %>%
distinct() %>% view()
## Looking at Dates
filteredPathandUDF %>%
select(uf_PhotoYear, Date) %>%
arrange(uf_PhotoYear) %>%
distinct() %>% view()
filteredPathandUDF %>%
select(uf_PhotoYear, uf_PhotoDate, Date) %>%
filter(is.na(uf_PhotoDate)) %>%
arrange(Date) %>% distinct() %>% view()
filteredPathandUDF %>%
select(uf_PhotoYear, uf_PhotoDate, Date) %>%
filter(is.na(uf_PhotoYear)) %>%
arrange(Date) %>% distinct() %>% view()
filteredPathandUDF %>%
select(uf_PhotoYear, uf_PhotoDate, Date) %>%
filter(is.na(uf_Photod)) %>%
arrange(Date) %>% distinct() %>% view()
WR_Dates <- filteredPathandUDF %>%
select(idThumb, pathInfo, Date, uf_PhotoYear, uf_PhotoDate) %>% distinct()
WR_CHCUFIX <- WR_Dates %>%
mutate(uf_PhotoYearfix = ifelse(Date == "CHCU_Photos_20151109", "2015", uf_PhotoYear),
uf_PhotoDatefix = ifelse(Date == "CHCU_Photos_20151109", "2015Sep09", uf_PhotoDate))
WR_dateFIX <- WR_Dates %>%
mutate(uf_PhotoYearfix = ifelse(Date == "CHCU_Photos_20151109", "2015", uf_PhotoYear),
uf_PhotoDatefix = ifelse(Date == "CHCU_Photos_20151109", "2015Sep09", uf_PhotoDate))
filteredPathandUDF %>%
filter(is.na(idThumbUDF))
filteredPathandUDF %>%
filter(is.na(idThumbUDF)) %>% view()
filteredPathandUDF %>%
filter(is.na(idThumbUDF)) %>%
select(Date) %>% distinct() %>% view()
filterThese12  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "20191103_survey"))
DMSandbox_ThumbsPlus <- odbcDriverConnect("driver=SQL Server; server=INPSCPNMS01\\DMSandbox, 50001; database=SCPN_ThumbsPlus_Photos; trusted_connection=yes;")
WR_PathandUDF <- sqlFetch(DMSandbox_ThumbsPlus, "view_WR_PathInfo_UDFInfo", stringsAsFactors = FALSE) %>%
arrange(filePath)
# UF_Table <- sqlFetch(DMSandbox_ThumbsPlus, "UserFields", stringsAsFactors = FALSE)
#event <- sqlFetch(DMSandbox_ThumbsPlus, "tbl_Event", stringsAsFactors = FALSE)
close(DMSandbox_ThumbsPlus)
filterThese1 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR$$"))
filterThese2 <- WR_PathandUDF %>%
filter(str_detect(filePath, "DSCN2276.zip$"))
filterThese3 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Rito$"))
filterThese4 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Canyon de Chelly$"))
filterThese5 <- WR_PathandUDF %>%
filter(str_detect(filePath, "LakePowell$"))
filterThese6 <- WR_PathandUDF %>%
filter(str_detect(filePath, "GRCA_MEVE_BAND_Photos.zip$"))
filterThese7 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR_Historical_Photo_Points$"))
filterThese8 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Original$"))
filterThese9 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Mancos$"))
filterThese10 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese11 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese12  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "20191103_survey"))
filterThese1 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR$$"))
filterThese2 <- WR_PathandUDF %>%
filter(str_detect(filePath, "DSCN2276.zip$"))
filterThese3 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Rito$"))
filterThese4 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Canyon de Chelly$"))
filterThese5 <- WR_PathandUDF %>%
filter(str_detect(filePath, "LakePowell$"))
filterThese6 <- WR_PathandUDF %>%
filter(str_detect(filePath, "GRCA_MEVE_BAND_Photos.zip$"))
filterThese7 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR_Historical_Photo_Points$"))
filterThese8 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Original$"))
filterThese9 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Mancos$"))
filterThese10 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese11 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese12  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "20191103_survey"))
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
filterList <- ls(pattern = "^filterThese\\d")
filterThese <- NULL # the dataframe to fill
for (d in 1:length(filterList)) {
filterThese <- bind_rows(filterThese, get(filterList[[d]])) %>% distinct() }
rm(list = ls(pattern = "^filterThese\\d"))
filterThese <- filterThese %>% arrange(Date)
filteredData <- WR_PathandUDF %>%
filter(!idThumb %in% filterThese$idThumb)
save(filteredData, file=here("filteredPathandUDF")) #s
load(here("filteredPathandUDF"))
filteredPathandUDF <- filteredData
DateFixes <- filteredData %>%
mutate(DateFix = ifelse(Date == "20100525_Labeled", "20100525",
ifelse(Date == "meveman01_20180328", "20180328",
ifelse(Date == "PETR_2014Dec10_PhotoPoints", "20141210",
ifelse(Date == "CHCU_Photos_20151109", "20151109", Date))))))
DateFixes <- filteredData %>%
mutate(DateFix = ifelse(Date == "20100525_Labeled", "20100525",
ifelse(Date == "meveman01_20180328", "20180328",
ifelse(Date == "PETR_2014Dec10_PhotoPoints", "20141210",
ifelse(Date == "CHCU_Photos_20151109", "20151109", Date)))))
DateFixes %>%
select(uf_PhotoYear, uf_PhotoDate, Date, filePath) %>% distinct() %>% view()
DMSandbox_ThumbsPlus <- odbcDriverConnect("driver=SQL Server; server=INPSCPNMS01\\DMSandbox, 50001; database=SCPN_ThumbsPlus_Photos; trusted_connection=yes;")
WR_PathandUDF <- sqlFetch(DMSandbox_ThumbsPlus, "view_WR_PathInfo_UDFInfo", stringsAsFactors = FALSE) %>%
arrange(filePath)
# UF_Table <- sqlFetch(DMSandbox_ThumbsPlus, "UserFields", stringsAsFactors = FALSE)
#event <- sqlFetch(DMSandbox_ThumbsPlus, "tbl_Event", stringsAsFactors = FALSE)
close(DMSandbox_ThumbsPlus)
filterThese1 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR$$"))
filterThese2 <- WR_PathandUDF %>%
filter(str_detect(filePath, "DSCN2276.zip$"))
filterThese3 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Rito$"))
filterThese4 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Canyon de Chelly$"))
filterThese5 <- WR_PathandUDF %>%
filter(str_detect(filePath, "LakePowell$"))
filterThese6 <- WR_PathandUDF %>%
filter(str_detect(filePath, "GRCA_MEVE_BAND_Photos.zip$"))
filterThese7 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR_Historical_Photo_Points$"))
filterThese8 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Original$"))
filterThese9 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Mancos$"))
filterThese10 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese11 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese12  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "20191103_survey"))
filter_These13  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "Canyon del Muerto$"))
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
filterList <- ls(pattern = "^filterThese\\d")
filterThese <- NULL # the dataframe to fill
for (d in 1:length(filterList)) {
filterThese <- bind_rows(filterThese, get(filterList[[d]])) %>% distinct() }
rm(list = ls(pattern = "^filterThese\\d"))
filterThese <- filterThese %>% arrange(Date)
filteredData <- WR_PathandUDF %>%
filter(!idThumb %in% filterThese$idThumb)
save(filteredData, file=here("filteredPathandUDF")) #s
filteredPathandUDF <- filteredData
DateFixes <- filteredData %>%
mutate(DateFix = ifelse(Date == "20100525_Labeled", "20100525",
ifelse(Date == "meveman01_20180328", "20180328",
ifelse(Date == "PETR_2014Dec10_PhotoPoints", "20141210",
ifelse(Date == "CHCU_Photos_20151109", "20151109", Date)))))
DateFixes %>%
select(uf_PhotoYear, uf_PhotoDate, Date, filePath) %>% distinct() %>% view()
filterThese1 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR$$"))
filterThese2 <- WR_PathandUDF %>%
filter(str_detect(filePath, "DSCN2276.zip$"))
filterThese3 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Rito$"))
filterThese4 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Canyon de Chelly$"))
filterThese5 <- WR_PathandUDF %>%
filter(str_detect(filePath, "LakePowell$"))
filterThese6 <- WR_PathandUDF %>%
filter(str_detect(filePath, "GRCA_MEVE_BAND_Photos.zip$"))
filterThese7 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR_Historical_Photo_Points$"))
filterThese8 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Original$"))
filterThese9 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Mancos$"))
filterThese10 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese11 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese12  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "20191103_survey"))
filter_These13  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "Canyon del Muerto$"))
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
filterList <- ls(pattern = "^filterThese\\d")
filterThese <- NULL # the dataframe to fill
for (d in 1:length(filterList)) {
filterThese <- bind_rows(filterThese, get(filterList[[d]])) %>% distinct() }
rm(list = ls(pattern = "^filterThese\\d"))
View(filterThese)
filter_These13  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "Canyon del Muerto$"))
View(filter_These13)
filterThese1 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR$$"))
filterThese2 <- WR_PathandUDF %>%
filter(str_detect(filePath, "DSCN2276.zip$"))
filterThese3 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Rito$"))
filterThese4 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Canyon de Chelly$"))
filterThese5 <- WR_PathandUDF %>%
filter(str_detect(filePath, "LakePowell$"))
filterThese6 <- WR_PathandUDF %>%
filter(str_detect(filePath, "GRCA_MEVE_BAND_Photos.zip$"))
filterThese7 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR_Historical_Photo_Points$"))
filterThese8 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Original$"))
filterThese9 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Mancos$"))
filterThese10 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese11 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese12  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "20191103_survey"))
filter_These13  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "Canyon del Muerto$"))
filterList <- ls(pattern = "^filterThese\\d")
filterThese <- NULL # the dataframe to fill
for (d in 1:length(filterList)) {
filterThese <- bind_rows(filterThese, get(filterList[[d]])) %>% distinct() }
rm(list = ls(pattern = "^filterThese\\d"))
filterThese1 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR$$"))
filterThese2 <- WR_PathandUDF %>%
filter(str_detect(filePath, "DSCN2276.zip$"))
filterThese3 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Rito$"))
filterThese4 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Canyon de Chelly$"))
filterThese5 <- WR_PathandUDF %>%
filter(str_detect(filePath, "LakePowell$"))
filterThese6 <- WR_PathandUDF %>%
filter(str_detect(filePath, "GRCA_MEVE_BAND_Photos.zip$"))
filterThese7 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR_Historical_Photo_Points$"))
filterThese8 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Original$"))
filterThese9 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Mancos$"))
filterThese10 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese11 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese12  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "20191103_survey"))
filter_These13  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "Canyon del Muerto$"))
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
filterList <- ls(pattern = "^filterThese\\d+")
filterList
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
filterList <- ls(pattern = "^filterThese\\d")
filterThese <- NULL # the dataframe to fill
for (d in 1:length(filterList)) {
filterThese <- bind_rows(filterThese, get(filterList[[d]])) %>% distinct() }
rm(list = ls(pattern = "^filterThese\\d+"))
View(filterThese)
filterThese1 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR$$"))
filterThese2 <- WR_PathandUDF %>%
filter(str_detect(filePath, "DSCN2276.zip$"))
filterThese3 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Rito$"))
filterThese4 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Canyon de Chelly$"))
filterThese5 <- WR_PathandUDF %>%
filter(str_detect(filePath, "LakePowell$"))
filterThese6 <- WR_PathandUDF %>%
filter(str_detect(filePath, "GRCA_MEVE_BAND_Photos.zip$"))
filterThese7 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR_Historical_Photo_Points$"))
filterThese8 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Original$"))
filterThese9 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Mancos$"))
filterThese10 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese11 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese12  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "20191103_survey"))
filterThese13  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "Canyon del Muerto$"))
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
filterList <- ls(pattern = "^filterThese\\d")
filterThese <- NULL # the dataframe to fill
for (d in 1:length(filterList)) {
filterThese <- bind_rows(filterThese, get(filterList[[d]])) %>% distinct() }
rm(list = ls(pattern = "^filterThese\\d"))
rm(list = ls(pattern = "^filterThese\\d"))
rm(filter_These13
filterThese <- filterThese %>% arrange(Date)
rm(filter_These13)
View(filterThese)
filterThese <- filterThese %>% arrange(Date)
filteredData <- WR_PathandUDF %>%
filter(!idThumb %in% filterThese$idThumb)
save(filteredData, file=here("filteredPathandUDF")) #s
DateFixes <- filteredData %>%
mutate(DateFix = ifelse(Date == "20100525_Labeled", "20100525",
ifelse(Date == "meveman01_20180328", "20180328",
ifelse(Date == "PETR_2014Dec10_PhotoPoints", "20141210",
ifelse(Date == "CHCU_Photos_20151109", "20151109", Date)))))
DateFixes %>%
select(uf_PhotoYear, uf_PhotoDate, Date, filePath) %>% distinct() %>% view()
filterThese14  <- WR_PathandUDF %>%
filter(str_detect(Date, "random"))
# filtering out the files that have weird filepaths or obviously errors
filterThese1 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR$$"))
filterThese2 <- WR_PathandUDF %>%
filter(str_detect(filePath, "DSCN2276.zip$"))
filterThese3 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Rito$"))
filterThese4 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Canyon de Chelly$"))
filterThese5 <- WR_PathandUDF %>%
filter(str_detect(filePath, "LakePowell$"))
filterThese6 <- WR_PathandUDF %>%
filter(str_detect(filePath, "GRCA_MEVE_BAND_Photos.zip$"))
filterThese7 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR_Historical_Photo_Points$"))
filterThese8 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Original$"))
filterThese9 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Mancos$"))
filterThese10 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese11 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese12  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "20191103_survey"))
filterThese13  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "Canyon del Muerto$"))
filterThese14  <- WR_PathandUDF %>%
filter(str_detect(Date, "random"))
filterThese15  <- WR_PathandUDF %>%
filter(str_detect(Date, "Many Cherry Spring"))
View(filterThese15)
filterThese16  <- WR_PathandUDF %>%
filter(str_detect(Date, "Twin Trail Spring$"))
filterThese17  <- WR_PathandUDF %>%
filter(str_detect(Date, "Wild Cherry Spring$"))
filterThese19  <- WR_PathandUDF %>%
filter(str_detect(Date, "GCT Unknown Camera"))
filterThese1 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR$$"))
filterThese2 <- WR_PathandUDF %>%
filter(str_detect(filePath, "DSCN2276.zip$"))
filterThese3 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Rito$"))
filterThese4 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Canyon de Chelly$"))
filterThese5 <- WR_PathandUDF %>%
filter(str_detect(filePath, "LakePowell$"))
filterThese6 <- WR_PathandUDF %>%
filter(str_detect(filePath, "GRCA_MEVE_BAND_Photos.zip$"))
filterThese7 <- WR_PathandUDF %>%
filter(str_detect(filePath, "HUTR_Historical_Photo_Points$"))
filterThese8 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Original$"))
filterThese9 <- WR_PathandUDF %>%
filter(str_detect(filePath, "Mancos$"))
filterThese10 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese11 <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "MEVE.Mancos.20180329.20180328"))
filterThese12  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "20191103_survey"))
filterThese13  <- WR_PathandUDF %>%
filter(str_detect(pathInfo, "Canyon del Muerto$"))
filterThese14  <- WR_PathandUDF %>%
filter(str_detect(Date, "random"))
filterThese15  <- WR_PathandUDF %>%
filter(str_detect(Date, "Many Cherry Spring"))
filterThese16  <- WR_PathandUDF %>%
filter(str_detect(Date, "Twin Trail Spring$"))
filterThese17  <- WR_PathandUDF %>%
filter(str_detect(Date, "Wild Cherry Spring$"))
filterThese18  <- WR_PathandUDF %>%
filter(str_detect(Date, "GRCA$"))
filterThese19  <- WR_PathandUDF %>%
filter(str_detect(Date, "GCT Unknown Camera"))
View(filterThese18)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
filterList <- ls(pattern = "^filterThese\\d")
filterThese <- NULL # the dataframe to fill
for (d in 1:length(filterList)) {
filterThese <- bind_rows(filterThese, get(filterList[[d]])) %>% distinct() }
rm(list = ls(pattern = "^filterThese\\d"))
filterThese <- filterThese %>% arrange(Date)
filteredData <- WR_PathandUDF %>%
filter(!idThumb %in% filterThese$idThumb)
save(filteredData, file=here("filteredPathandUDF")) #s
load(here("filteredPathandUDF"))
filteredPathandUDF <- filteredData
filteredPathandUDF %>%
select(uf_PhotoYear, uf_PhotoDate, Date) %>%
filter(is.na(uf_PhotoDate)) %>%
arrange(Date) %>% distinct() %>% view()
WR_Dates <- filteredPathandUDF %>%
select(idThumb, pathInfo, Date, uf_PhotoYear, uf_PhotoDate) %>% distinct()
filteredPathandUDF %>%
select(uf_PhotoYear, uf_PhotoDate, Date) %>%
filter(is.na(uf_PhotoDate)) %>%
arrange(Date) %>% distinct() %>% view()
DateFixes <- filteredData %>%
mutate(DateFix = ifelse(Date == "20100525_Labeled", "20100525",
ifelse(Date == "meveman01_20180328", "20180328",
ifelse(Date == "PETR_2014Dec10_PhotoPoints", "20141210",
ifelse(Date == "CHCU_Photos_20151109", "20151109",
ifelse(Date == "20080915Petroglyph", "20080915",
ifelse(Date == "Scanned Photos_1998-2003", "1998-2003",
Date)))))))
## Looking at Duf_PhotoDate## Looking at Dates
DateFixes %>%
select(uf_PhotoYear, Date) %>%
arrange(uf_PhotoYear) %>%
distinct() %>% view()
## Looking at Duf_PhotoDate## Looking at Dates
DateFixes %>%
select(uf_PhotoYear, DateFix) %>%
arrange(uf_PhotoYear) %>%
distinct() %>% view()
